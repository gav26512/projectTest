version: '3.3'

services:

  webserver:
    image: nginx:latest
    container_name: webserver_${COMPOSE_PROJECT_NAME}
    ports:
      - ${WEB_PORT}:80
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app
      - ./docker/nginx/default.conf:/etc/nginx/templates/default.conf.template
    links:
      - php_landing
      - php_activity
    environment:
      PHP_LANDING: php-fpm_landing_${COMPOSE_PROJECT_NAME}
      PHP_ACTIVITY: php-fpm_activity_${COMPOSE_PROJECT_NAME}

  php_landing:
    build: ./docker/php_landing
    container_name: php-fpm_landing_${COMPOSE_PROJECT_NAME}
    volumes:
      - ./landing:/app/landing
      - ./docker/php_landing/docker-php-memory-limit.ini:/usr/local/etc/php/conf.d/docker-php-memory-limit.ini
    links:
      - database
    env_file:
      - .env

  php_activity:
    build: ./docker/php_activity
    container_name: php-fpm_activity_${COMPOSE_PROJECT_NAME}
    volumes:
      - ./activity:/app/activity
      - ./docker/php_activity/docker-php-memory-limit.ini:/usr/local/etc/php/conf.d/docker-php-memory-limit.ini
    links:
      - database
    env_file:
      - .env

  # postgres
  database:
    image: postgres
    container_name: postgres_${COMPOSE_PROJECT_NAME}
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data
      - ./docker/postgres://docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_OUT_PORT}:${POSTGRES_PORT}

networks:
  my-network:
    driver: bridge
